name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}      
      uses: actions/setup-node@v1
    - name: "Build connector"
      run: docker build --pull --rm -f "connector/Dockerfile" -t apiconnector:latest "connector"
    - name: "Build flask"
      run: docker build --pull --rm -f "flask/Dockerfile" -t flask:latest "flask"
    - name: "docker up"
      run: docker compose -f "docker-compose.dev.yml" up -d --build
    - name: "Wait for docker to finish building"
      run: sleep 30
    - name: "Check they are alive"
      run: docker ps -a
    - name: "check databases by curl, not postman by now"
      run: curl http://127.0.0.1:8008/mongocollections
    
    
    - name: Install newman
      run: |
        npm install -g newman
        npm install -g newman-reporter-htmlextra

    - name: Make Directory for Test Results
      run: mkdir -p testArtifacts
 
 
      # Run postman collection, ok I don't know how
    - name: Run Postman Collection 1        
      run: |
        newman  run tests/apiTest/MongoDB -r htmlextra --reporter-htmlextra-export testArtifacts/htmlreportMongo.html
    - name: Run Postman Collection 2       
      run: |
        newman  run tests/apiTest/PostgreSQL -r htmlextra --reporter-htmlextra-export testArtifacts/htmlreportPostgre.html
    - name: Run Postman Collection 3       
      run: |
        newman  run tests/apiTest/BothDatabases -r htmlextra --reporter-htmlextra-export testArtifacts/htmlreportBoth.html
    - name: Output the results
      uses: actions/upload-artifact@v2
      with:
       name: Reports
       path: testArtifacts
